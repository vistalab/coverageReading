%% run LiFE on data collected at the CNI
% save a copy of this script in each subject's directory
clear all; close all; clc; 
bookKeeping; 

%% modify here

list_subInds = 2; 

% the comprehensive connectome. pdb file
% relative to dirDiffusion
connectomeComprehensiveDir = '';
connectomeComprehensiveName = 'Connectome_500000_curvature1.pdb';

% name that we will give to the optimized connectome and data structure
optimizedName = ['LiFEOptimized_' connectomeComprehensiveName];


%% do things

for ii = list_subInds

    tic
    
    % shared anatomy directory
    dirAnatomy = list_anatomy{ii};

    % subject's diffusion directory
    dirDiffusion = list_sessionDtiQmri{ii};

    % paths to diffusion and anatomy data
    % we want the data that is aligned!
    % which should be kept in dti96trilin_runX_res2/bin/
    dwiFile = fullfile(dirDiffusion, 'dti96trilin_run1_res2', 'bin', 'dti_aligned_trilin.nii.gz');
    dwiFileRepeat = fullfile(dirDiffusion, 'dti96trilin_run2_res2', 'bin', 'dti_aligned_trilin.nii.gz'); 
    t1File  = fullfile(dirAnatomy, 't1.nii.gz');

    % full directory path of where to save optimized connectome
    saveDir = fullfile(dirDiffusion, connectomeComprehensiveDir);

    %% (1) Evaluate the Probabilistic CSD-based connectome ===================

    chdir(dirDiffusion)

    % full path of comprehensive connectome
    fgFile = fullfile(dirDiffusion, connectomeComprehensiveDir, connectomeComprehensiveName);

    %% (1.1) Initialize the LiFE-BD model structure
    % USE MATLAB 2015A IF POSSIBLE
    % This cell will take approximately __ amount of time

    N = 360; % Discretization parameter (not entirely sure what this is for)
    mycomputer = computer(); 
    release = version('-release');

    switch strcat(mycomputer,'_',release)
        %  case {'GLNXA64_2015a','MACI64_2014b'} % 2015a seems to be hard-coded into other parts of the code 
        case {'GLNXA64_2015a','MACI64_2014b'}
        fe = feConnectomeInit(dwiFile,fgFile,optimizedName,saveDir,dwiFileRepeat,t1File,N,[1,0],0);
        otherwise
        sprintf('WARNING: currently LiFE is optimized for an efficient usage of memory \n using the Sparse Tucker Decomposition aproach (Caiafa&Pestilli, 2015) \n ONLY for Linux (MatlabR2015a) and MacOS (MatlabR2014b). \n If you have a different system or version you can still \n use the old version of LiFE (memory intensive). \n\n')
        sprintf('\n Starting building big matrix M in OLD LiFE...\n')
        fe = feConnectomeInit(dwiFile,fgFile,optimizedName,saveDir,dwiFileRepeat,t1File,N,[1,0],1);
    end

    %% (1.2) Fit the model.     
    % Hereafter we fit the forward model of tracrography using a least-squared
    % method. The information generated by fitting the model (fiber weights
    % etc) is then installed in the LiFE-BD structure.

    fe = feSet(fe,'fit',feFitModel(feGet(fe,'model'),feGet(fe,'dsigdemeaned'),'bbnnls'));

    %% Get the optimized connectome:
    FG = feGet(fe, 'fibers acpc');
    W = feGet(fe,'fiber weights');
    FG = fgExtract(FG, W > 0, 'keep');

    %% Save the optimized connectome

    chdir(fullfile(dirDiffusion, connectomeComprehensiveDir))

    % save as mat and pdb
    fgWrite(FG, optimizedName, 'pdb');
    fgWrite(FG, optimizedName, 'mat');

    toc
end